name: "Test secrets"

on:
    workflow_dispatch:
        inputs:
            override:
                description: "Override the default value"
                required: false
                type: string
                default: "spcs-int"
    workflow_call:
        inputs:
            override:
                description: "Override the default value"
                required: false
                type: string
                default: "spcs-int"
        # secrets:
        #     test_workflow:
        #         required: true
        #         description: "The workflow to test"
        #     another_secret:
        #         required: true
        #         description: "Another secret"

jobs:

    TestApproval1:
        name: Test approval 1
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
        # - uses: ./.github/actions/test-vars
        #   id: test-vars
        #   with:
        #     environment: ${{ toJson(vars) }}
        # - name: Set src account credentials
        #   id: set-src-account-credentials
        #   shell: bash
        #   run: |
        #     SRC_ACCOUNT="${{ vars.TEST_LATEST_VAR }}"
        #     SRC_PWD="${{ secrets.TEST_SECRET }}"
        #     if [ -n "${{ inputs.override }}" ]; then
        #         case "${{ inputs.override }}" in
        #         "latest")
        #             SRC_ACCOUNT="${{ vars.TEST_STAGING_VAR }}"
        #             SRC_PWD="${{ secrets.ANOTHER_TEST }}"
        #             ;;
        #         *)
        #             echo "option not supported"
        #             exit 1
        #             ;;
        #         esac
        #     fi
        #     echo "src_snowsql_password=$SRC_PWD" >> $GITHUB_OUTPUT
        #     echo "src_snowsql_account=$SRC_ACCOUNT" >> $GITHUB_OUTPUT
        - run: |
            ENV_MAP='{
                "spcs-int": "VAR",
                "spcs-staging": "STAGING",
                "spcs-prod-uswest": "PROD_WESTUS_1",
                "spcs-prod-useast": "PROD_EASTUS_1"
            }'
            export ENV_MAP
            PROVIDER_ACCOUNT_VAR="TEST_LATEST_VAR"
            echo "override is : ${{ inputs.override }}"
            echo "valS is ${!PROVIDER_ACCOUNT_VAR}"
            echo "val is : ${{ fromJSON(${env.ENV_MAP})['spcs-int'] }}"
            echo "account is: ${{ vars[format('TEST_LATEST_%s', fromJSON(env.ENV_MAP)[inputs.override])] }}"
          shell: bash